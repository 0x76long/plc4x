<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.plc4x</groupId>
    <artifactId>plc4x-parent</artifactId>
    <version>0.4.0-SNAPSHOT</version>
  </parent>

  <artifactId>plc4cpp</artifactId>
  <packaging>pom</packaging>

  <name>PLC4Cpp</name>
  <description>Implementation of the protocol adapters for usage as C++ library.</description>

  <!-- Disabled for now as C++ support is currently not installed in Apache SonarQube -->
  <!--properties>
    <sonar.language>c++</sonar.language>
  </properties-->

  <build>
    <plugins>
      <plugin>
        <groupId>com.googlecode.cmake-maven-project</groupId>
        <artifactId>cmake-maven-plugin</artifactId>
        <version>3.7.2-b1</version>
        <executions>
          <!-- Uses a CMake generator to generate the build using the build tool of choice -->
          <execution>
            <id>cmake-generate</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <!--
                Actually the path to the CMakeList.txt file which then again
                tells to tool where to find the sources.
              -->
              <sourcePath>${project.basedir}</sourcePath>
              <!--
                Path to where the build configuration is generated
                (This directory is then used in the compile step to actually perform the build)
              -->
              <targetPath>${project.build.directory}/build</targetPath>
              <!--
                Name of the generator the compile step will be executing.
              -->
              <generator>${cmake.generator}</generator>
              <!--
                The classifier of the current platform. One of
                [windows-x86_32, windows-x86_64, linux-x86_32, linux-x86_64, linux-arm_32, mac-x86_64].
                It defines the version and type of the cmake installation to download.
              -->
              <classifier>${os.classifier}</classifier>
              <environmentVariables>
                <BOOST_ROOT>${project.build.directory}/lib</BOOST_ROOT>
                <BOOST_INCLUDEDIR>${project.build.directory}/lib/boost/includes</BOOST_INCLUDEDIR>
                <BOOST_LIBRARYDIR>${project.build.directory}/lib/boost/lib</BOOST_LIBRARYDIR>
                <Boost_NO_SYSTEM_PATHS>ON</Boost_NO_SYSTEM_PATHS>
              </environmentVariables>
            </configuration>
          </execution>
          <!-- Actually executes the build -->
          <execution>
            <id>cmake-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <!-- The directory where the "generate" step generated the build configuration -->
              <projectDirectory>${project.build.directory}/build</projectDirectory>
              <classifier>${os.classifier}</classifier>
              <environmentVariables>
                <BOOST_ROOT>${project.build.directory}/lib</BOOST_ROOT>
                <BOOST_INCLUDEDIR>${project.build.directory}/lib/boost/includes</BOOST_INCLUDEDIR>
                <BOOST_LIBRARYDIR>${project.build.directory}/lib/boost/lib</BOOST_LIBRARYDIR>
                <Boost_NO_SYSTEM_PATHS>ON</Boost_NO_SYSTEM_PATHS>
              </environmentVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Prevent the jar plugin from building a jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>default-jar</id>
            <phase/>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>